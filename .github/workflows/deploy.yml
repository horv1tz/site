name: Build and Deploy by Docker

on:
  push:
    branches:
      - main  # Ветка, на которой будет запускаться деплой

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      node-cache-path: ${{ steps.cache.outputs.cache-hit }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'  # Убедитесь, что версия Node.js соответствует вашему Dockerfile

      - name: Cache Node.js dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

  build:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t docker.dvorfs.com/horvitz/site:latest .  # Собираем Docker-образ

      - name: Log in to Docker registry
        uses: docker/login-action@v2
        with:
          registry: docker.dvorfs.com  # Указываем правильный URL вашего Docker Registry
          username: ${{ secrets.DOCKER_USERNAME }}  # Убедитесь, что у вас настроены секреты для логина
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker push docker.dvorfs.com/horvitz/site:latest  # Загружаем образ в Docker Registry

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy Docker image to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER: ${{ secrets.SERVER }}
          USER: ${{ secrets.USER }}
        run: |
          eval "$(ssh-agent -s)"  # Запуск SSH-агента
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -  # Добавление приватного ключа в SSH-агент
          
          # Очистка старых контейнеров, если они есть
          ssh -o StrictHostKeyChecking=no $USER@$SERVER "docker rm -f horvitz-site || true"

          # Pull нового Docker-образа с Docker Registry
          ssh -o StrictHostKeyChecking=no $USER@$SERVER "docker pull docker.dvorfs.com/horvitz/site:latest"

          # Запуск нового контейнера
          ssh -o StrictHostKeyChecking=no $USER@$SERVER "docker run -d -p 4173:4173 --name horvitz-site docker.dvorfs.com/horvitz/site:latest"

          # Завершаем работу с SSH-агентом
          ssh-agent -k
name: Build and Deploy by Docker

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      node-cache-path: ${{ steps.cache.outputs.cache-hit }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Cache Node.js dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: "‚úÖ TG: Setup completed"
        if: success()
        uses: appleboy/telegram-action@master
        continue-on-error: true
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "‚úÖ [SETUP COMPLETED] - Repo: ${{ github.repository }}\nBranch: ${{ github.ref_name }}"

      - name: "‚ùå TG: Setup failed"
        if: failure()
        uses: appleboy/telegram-action@master
        continue-on-error: true
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "‚ùå [SETUP FAILED] - Repo: ${{ github.repository }}\nBranch: ${{ github.ref_name }}"

  build:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          set -e
          docker build -t docker.dvorfs.com/horvitz/site:latest -f ./docker/Dockerfile .

      - name: Log in to Docker registry
        uses: docker/login-action@v2
        with:
          registry: docker.dvorfs.com
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          set -e
          docker push docker.dvorfs.com/horvitz/site:latest

      - name: "‚úÖ TG: Build completed"
        if: success()
        uses: appleboy/telegram-action@master
        continue-on-error: true
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "üì¶ [BUILD COMPLETED] - Repo: ${{ github.repository }}\nBranch: ${{ github.ref_name }}"

      - name: "‚ùå TG: Build failed"
        if: failure()
        uses: appleboy/telegram-action@master
        continue-on-error: true
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "‚ùå [BUILD FAILED] - Repo: ${{ github.repository }}\nBranch: ${{ github.ref_name }}"

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy service to Swarm cluster
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER: ${{ secrets.SERVER }}
          USER: ${{ secrets.USER }}
        run: |
          set -e
          eval "$(ssh-agent -s)"
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
          
          ssh -o StrictHostKeyChecking=no $USER@$SERVER << EOF
            echo "Deploying to Swarm..."
            docker service rm horvitz-site || true
            docker service create --name horvitz-site --replicas 3 --publish 4173:4173 --constraint 'node.role == worker' --with-registry-auth --label "traefik.enable=true" --label "traefik.http.routers.horvitz-site.rule=Host(`horvitz.ru`)" --label "traefik.http.services.horvitz-site-service.loadbalancer.server.port=8080" docker.dvorfs.com/horvitz/site:latest 
          EOF
          
          ssh-agent -k

      - name: "‚úÖ TG: Deploy completed"
        if: success()
        uses: appleboy/telegram-action@master
        continue-on-error: true
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "üöÄ [DEPLOY COMPLETED] - Repo: ${{ github.repository }}\nBranch: ${{ github.ref_name }}\nServer: http://${{ secrets.SERVER }}:4173"

      - name: "‚ùå TG: Deploy failed"
        if: failure()
        uses: appleboy/telegram-action@master
        continue-on-error: true
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "‚ùå [DEPLOY FAILED] - Repo: ${{ github.repository }}\nBranch: ${{ github.ref_name }}\nServer: http://${{ secrets.SERVER }}:4173"